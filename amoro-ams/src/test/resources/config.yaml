################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
################################################################################

jobmanager:
  bind-host: localhost
  rpc:
    address: localhost
    port: 6123
  memory:
    process:
      size: 1600m
  execution:
    failover-strategy: region

taskmanager:
  bind-host: localhost
  host: localhost
  numberOfTaskSlots: 1
  memory:
    process:
      size: 1728m

parallelism:
  default: 1

containers:
  - name: KubernetesContainer
    container-impl: org.apache.amoro.server.manager.KubernetesOptimizerContainer
    properties:
      kube-config-path: "~/.kube/config"
      image: apache/amoro:0.7-SNAPSHOT
      namespace: default
      pullPolicy: "IfNotPresent"
      podTemplate: |
        apiVersion: apps/v1
        kind: PodTemplate
        metadata:
          name: <NAME_PREFIX><resourceId>
        template:
          metadata:
            labels:
              app: <NAME_PREFIX><resourceId>
              AmoroOptimizerGroup: <groupName>
              AmoroResourceId: <resourceId>
          spec:
            containers:
              - name: optimizer
                image: apache/amoro:0.6
                imagePullPolicy: IfNotPresent
                command: [ "sh", "-c", "echo 'Hello, World!'" ]
                resources:
                  limits:
                    memory: 2048Mi
                    cpu: 2
                  requests:
                    memory: 2048Mi
                    cpu: 2