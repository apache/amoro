<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>amoro-mixed-format-spark</artifactId>
        <groupId>org.apache.amoro</groupId>
        <version>0.7-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>amoro-mixed-format-spark-runtime-3.2</artifactId>
    <packaging>jar</packaging>
    <name>Amoro Project Mixed Format Spark 3.2 Runtime</name>
    <url>https://amoro.apache.org</url>

    <dependencies>
        <dependency>
            <groupId>org.apache.amoro</groupId>
            <artifactId>amoro-mixed-format-spark-3.2</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <id>shade-amoro</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <artifactSet>
                                <includes>
                                    <include>org.apache.amoro:amoro-mixed-format-spark-3-common</include>
                                    <include>org.apache.amoro:amoro-mixed-format-spark-3.2</include>
                                    <include>org.apache.amoro:amoro-core</include>
                                    <include>org.apache.amoro:amoro-ams-api</include>
                                    <include>org.apache.amoro:amoro-shade-guava-32</include>
                                    <include>org.apache.amoro:amoro-shade-jackson-2</include>
                                    <include>org.apache.amoro:amoro-shade-thrift</include>
                                    <include>org.apache.amoro:amoro-shade-zookeeper-3</include>
                                    <include>org.apache.iceberg:iceberg-core</include>
                                    <include>org.apache.iceberg:iceberg-api</include>
                                    <include>org.apache.iceberg:iceberg-spark-3.2_2.12</include>
                                    <include>org.apache.iceberg:iceberg-common</include>
                                    <include>org.apache.iceberg:iceberg-data</include>
                                    <include>org.apache.iceberg:iceberg-orc</include>
                                    <include>org.apache.iceberg:iceberg-parquet</include>
                                    <include>org.apache.iceberg:iceberg-aws</include>
                                    <include>org.apache.parquet:parquet-column</include>
                                    <include>org.apache.parquet:parquet-hadoop</include>
                                    <include>org.apache.parquet:parquet-common</include>
                                    <include>org.apache.parquet:parquet-format</include>
                                    <include>org.apache.parquet:parquet-format-structures</include>
                                    <include>org.apache.parquet:parquet-encoding</include>
                                    <include>org.apache.parquet:parquet-jackson</include>
                                    <include>org.apache.iceberg:iceberg-arrow</include>
                                    <include>org.apache.iceberg:iceberg-hive-metastore</include>
                                    <include>org.apache.iceberg:iceberg-spark</include>
                                    <include>org.apache.iceberg:iceberg-spark-extensions-3.2_2.12
                                    </include>
                                    <include>org.apache.iceberg:iceberg-bundled-guava</include>
                                    <include>org.apache.orc:*</include>
                                    <include>org.apache.thrift:libthrift</include>
                                    <include>org.apache.avro:avro</include>
                                    <include>org.apache.parquet:parquet-avro</include>
                                    <include>org.apache.commons:commons-pool2</include>
                                    <include>org.apache.commons:commons-lang3</include>
                                    <include>org.apache.commons:commons-collections</include>
                                    <include>com.github.ben-manes.caffeine:caffeine</include>
                                    <include>org.apache.httpcomponents.client5:*</include>
                                    <include>org.apache.httpcomponents.core5:*</include>
                                </includes>
                                <excludes>
                                    <exclude>com.google.code.findbugs:jsr305</exclude>
                                    <exclude>org.slf4j:*</exclude>
                                    <exclude>org.apache.logging.log4j:*</exclude>
                                </excludes>
                            </artifactSet>
                            <filters>
                                <filter combine.children="append">
                                    <artifact>*</artifact>
                                    <excludes>
                                        <exclude>org/apache/iceberg/spark/extensions/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <relocations>
                                <!-- relocation amoro spark packages -->
                                <relocation>
                                    <pattern>org.apache.spark.sql.amoro</pattern>
                                    <shadedPattern>org.apache.amoro.spark.sql</shadedPattern>
                                </relocation>

                                <!-- relocation required dependencies -->
                                <relocation>
                                    <pattern>org.apache.orc</pattern>
                                    <shadedPattern>org.apache.amoro.shade.org.apache.orc
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.avro</pattern>
                                    <shadedPattern>org.apache.amoro.shade.org.apache.avro
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.parquet.avro</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.parquet.avro
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.parquet.column</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.parquet.column
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.parquet.hadoop</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.parquet.hadoop
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.parquet.common</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.parquet.common
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.parquet.format</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.parquet.format
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>shaded.parquet</pattern>
                                    <shadedPattern>org.apache.amoro.shade.parquet</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>shaded.parquet.it</pattern>
                                    <shadedPattern>org.apache.amoro.shade.parquet.it
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.parquet.crypto</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.parquet.crypto
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.parquet</pattern>
                                    <shadedPattern>org.apache.amoro.shade.org.apache.parquet
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.commons.pool2</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.commons.pool2
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.github.ben-manes</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.com.github.ben-manes
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.commons.lang3</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.commons.lang3
                                    </shadedPattern>
                                </relocation>

                                <!-- relocation iceberg -->
                                <relocation>
                                    <pattern>org.apache.iceberg</pattern>
                                    <shadedPattern>org.apache.amoro.shade.org.apache.iceberg
                                    </shadedPattern>
                                    <excludes>
                                        <exclude>org.apache.iceberg.mr.hive.*</exclude>
                                    </excludes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.connector.iceberg</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.connector.iceberg
                                    </shadedPattern>
                                    <excludes>
                                        <exclude>
                                            org.apache.spark.sql.connector.iceberg.catalog.ProcedureCatalog
                                        </exclude>
                                        <exclude>
                                            org.apache.spark.sql.connector.iceberg.catalog.Procedure
                                        </exclude>
                                        <exclude>
                                            org.apache.spark.sql.connector.iceberg.catalog.ProcedureParameter
                                        </exclude>
                                        <exclude>
                                            org.apache.spark.sql.connector.iceberg.catalog.ProcedureParameterImpl
                                        </exclude>
                                    </excludes>
                                </relocation>

                                <!-- relocation iceberg-spark3-extensions -->
                                <relocation>
                                    <pattern>org.apache.spark.sql.execution.datasources.v2</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.execution.datasources.v2
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.AddPartitionFieldExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.CallExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.DropIdentifierFields*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.DropPartitionFieldExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.DynamicFileFilterExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.DynamicFileFilterWithCardinalityCheckExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.ExtendedBatchScanExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.ExtendedDataSourceV2Implicits*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.ExtendedDataSourceV2Strategy*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.MixedFormatExtendedDataSourceV2Strategy*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.MergeIntoExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.ReplaceDataExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.ReplacePartitionFieldExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.SetIdentifierFieldsExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.SetWriteDistributionAndOrderingExec*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.OptimizeMetadataOnlyDeleteFromTable*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.RowLevelCommandScanRelationPushDown*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.ExtendedV2Writes*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.v2.ReplaceRewrittenRowLevelCommand*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.execution.datasources</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.execution.datasources
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.execution.datasources.SparkExpressionConverter*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.catalyst.analysis</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.catalyst.analysis
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.AlignRowLevelOperations*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.AssignmentAlignmentSupport*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.ProcedureArgumentCoercion*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.ResolveProcedures*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.RowLevelOperationsPredicateCheck*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.ResolveMergeIntoTableReferences*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.CheckMergeIntoTableConditions*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.AlignRowLevelCommandAssignments*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.RewriteDeleteFromTable*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.RewriteUpdateTable*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.RewriteMergeIntoTable*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.MergeIntoIcebergTableResolutionCheck*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.analysis.AlignedRowLevelIcebergCommandCheck*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.catalyst.expressions</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.catalyst.expressions
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.catalyst.expressions.AccumulateFiles*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.expressions.Iceberg*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.catalyst.optimizer</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.catalyst.optimizer
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.catalyst.optimizer.ExtendedSimplifyConditionalsInPredicate*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.optimizer.ExtendedReplaceNullWithFalseInPredicate*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.catalyst.parser.extensions
                                    </pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.catalyst.parser.extensions
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.catalyst.parser.extensions.Iceberg*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.parser.extensions.UpperCaseCharStream*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.parser.extensions.IcebergSparkSqlExtensionsParser*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.catalyst.plans.logical</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.catalyst.plans.logical
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.AddPartitionField*
                                        </include>
                                        <include>org.apache.spark.sql.catalyst.plans.logical.Call*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.DropPartitionField
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.DynamicFileFilter*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.MergeInto
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.MergeInto$
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.MergeIntoParams*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.NamedArgument*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.PositionalArgument*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.ReplaceData*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.ReplacePartitionField*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.SetIdentifierFields*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.SetWriteDistributionAndOrdering*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.plans.logical.SortOrderParserUtil*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.catalyst.utils</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.catalyst.utils
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.catalyst.utils.DistributionAndOrderingUtils*
                                        </include>
                                        <include>org.apache.spark.sql.catalyst.utils.PlanUtils*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.utils.RewriteRowLevelOperationHelper*
                                        </include>
                                        <include>
                                            org.apache.spark.sql.catalyst.utils.SetAccumulator*
                                        </include>
                                    </includes>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.hc</pattern>
                                    <shadedPattern>org.apache.amoro.shade.org.apache.hc
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.spark.sql.execution.dynamicpruning</pattern>
                                    <shadedPattern>
                                        org.apache.amoro.shade.org.apache.spark.sql.execution.dynamicpruning
                                    </shadedPattern>
                                    <includes>
                                        <include>
                                            org.apache.spark.sql.execution.dynamicpruning.RowLevelCommandDynamicPruning*
                                        </include>
                                    </includes>
                                </relocation>
                            </relocations>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
